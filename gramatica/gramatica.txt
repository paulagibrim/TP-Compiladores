<programa> ::= <declaracoes>

<declaracoes> ::= <declaracao> 
                | <declaracao> <declaracoes>

<declaracao> ::= <declaracao_variavel> 
               | <declaracao_funcao> 
               | <declaracao_estrutura> 
               | <redefinicao_variavel>

<declaracao_variavel> ::= <tipo> <identificador> "vai ser" <expressao> "."

<redefinicao_variavel> ::= <identificador> "vai ser" <expressao> "."

<declaracao_funcao> ::= "naquele naipe" <identificador> "{" <parametros> "}" ":" <bloco>

<parametros> ::= <parametro> 
               | <parametro> "," <parametros>

<parametro> ::= <identificador>

<declaracao_estrutura> ::= <if> 
                         | <while> 
                         | <break> 
                         | <print> 
                         | <return>

<if> ::= "fraga" <expressao> "?" <declaracoes> "acabou, quer um cafezin?"
       | "fraga" <expressao> "?" <declaracoes> "nao?"
       | "fraga" <expressao> "?" <declaracoes> "nao?" <declaracoes> "acabou, quer um cafezin?"

<while> ::= "vai fazendo ate" <expressao> ":" <declaracoes> "acabou, quer um cafezin?"

<for> ::= "pra" "{" <declaracao_variavel> "." <expressao> "." <expressao> "}" ":" <declaracoes> "acabou, quer um cafezin?"

<break> ::= "pica mula" "."

<return> ::= "arreda" <expressao> "."

<expressao> ::= <termo> 
              | <termo> "ai ce junta" <expressao> 
              | <termo> "ai ce diminui" <expressao> 
              | <termo> "ce multiplica por" <expressao> 
              | <termo> "ce divide por" <expressao> 
              | <operadores_pos> <termo> <termo> 
              | <termo> <operador> <expressao>

<print> ::= "anota" ":" <expressao> "."

<termo> ::= <identificador> 
          | <numero> 
          | <string> 
          | <bool> 
          | <char>

<operador> ::= "elevado a" 
             | "engual" 
             | "nada a ver com" 
             | "maior que" 
             | "menor que"

<operadores_pos> ::= "OR_OP" 
                   | "AND_OP" 
                   | "NOT_OP"

<tipo> ::= "trem inteiro" 
         | "trem picado" 
         | "trem escrito" 
         | "trem bololo" 
         | "nada nao"

<bloco> ::= "{" <declaracoes> "}"

<identificador> ::= [a-zA-Z_][a-zA-Z0-9_]*
<numero> ::= [0-9]+
<string> ::= <char>+
<bool> ::= "de rocha" | "mintira"
<char> ::= [a-zA-Z]
